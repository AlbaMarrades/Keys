{"version":3,"file":"testing-library-angular.mjs","sources":["../../../../projects/testing-library/src/lib/config.ts","../../../../projects/testing-library/src/lib/testing-library.ts","../../../../projects/testing-library/src/public_api.ts","../../../../projects/testing-library/testing-library-angular.ts"],"sourcesContent":["import { Config } from './models';\n\nlet config: Config = {\n  dom: {},\n  defaultImports: [],\n};\n\nexport function configure(newConfig: Partial<Config> | ((config: Partial<Config>) => Partial<Config>)) {\n  if (typeof newConfig === 'function') {\n    // Pass the existing config out to the provided function\n    // and accept a delta in return\n    newConfig = newConfig(config);\n  }\n\n  // Merge the incoming config delta\n  config = {\n    ...config,\n    ...newConfig,\n  };\n}\n\nexport function getConfig() {\n  return config;\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  Type,\n  NgZone,\n  SimpleChange,\n  OnChanges,\n  SimpleChanges,\n  ApplicationInitStatus,\n} from '@angular/core';\nimport { ComponentFixture, TestBed, tick } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport {\n  getQueriesForElement as dtlGetQueriesForElement,\n  prettyDOM as dtlPrettyDOM,\n  waitFor as dtlWaitFor,\n  waitForElementToBeRemoved as dtlWaitForElementToBeRemoved,\n  screen as dtlScreen,\n  within as dtlWithin,\n  waitForOptions as dtlWaitForOptions,\n  configure as dtlConfigure,\n  Queries,\n  getQueriesForElement,\n  queries as dtlQueries,\n} from '@testing-library/dom';\nimport { RenderComponentOptions, RenderTemplateOptions, RenderResult } from './models';\nimport { getConfig } from './config';\n\nconst mountedFixtures = new Set<ComponentFixture<any>>();\nconst inject = TestBed.inject || TestBed.get;\n\nexport async function render<ComponentType>(\n  component: Type<ComponentType>,\n  renderOptions?: RenderComponentOptions<ComponentType>,\n): Promise<RenderResult<ComponentType, ComponentType>>;\nexport async function render<WrapperType = WrapperComponent>(\n  template: string,\n  renderOptions?: RenderTemplateOptions<WrapperType>,\n): Promise<RenderResult<WrapperType>>;\n\nexport async function render<SutType, WrapperType = SutType>(\n  sut: Type<SutType> | string,\n  renderOptions: RenderComponentOptions<SutType> | RenderTemplateOptions<WrapperType> = {},\n): Promise<RenderResult<SutType>> {\n  const { dom: domConfig, ...globalConfig } = getConfig();\n  const {\n    detectChanges: detectChangesOnRender = true,\n    declarations = [],\n    imports = [],\n    providers = [],\n    schemas = [],\n    queries,\n    template = undefined,\n    wrapper = WrapperComponent,\n    componentProperties = {},\n    componentProviders = [],\n    excludeComponentDeclaration = false,\n    routes,\n    removeAngularAttributes = false,\n    defaultImports = [],\n  } = { ...globalConfig, ...renderOptions };\n\n  dtlConfigure({\n    eventWrapper: (cb) => {\n      const result = cb();\n      detectChangesForMountedFixtures();\n      return result;\n    },\n    ...domConfig,\n  });\n\n  TestBed.configureTestingModule({\n    declarations: addAutoDeclarations(sut, {\n      declarations,\n      excludeComponentDeclaration,\n      wrapper,\n    }),\n    imports: addAutoImports({\n      imports: imports.concat(defaultImports),\n      routes,\n    }),\n    providers: [...providers],\n    schemas: [...schemas],\n  });\n\n  await TestBed.compileComponents();\n\n  componentProviders\n    .reduce((acc, provider) => acc.concat(provider), [])\n    .forEach((p) => {\n      const { provide, ...provider } = p;\n      TestBed.overrideProvider(provide, provider);\n    });\n\n  const componentContainer = createComponentFixture(sut, { wrapper });\n\n  let fixture: ComponentFixture<SutType>;\n  let detectChanges: () => void;\n\n  await renderFixture(componentProperties);\n\n  const rerender = async (rerenderedProperties: Partial<SutType>) => {\n    await renderFixture(rerenderedProperties);\n  };\n\n  const change = (changedProperties: Partial<SutType>) => {\n    const changes = getChangesObj(fixture.componentInstance, changedProperties);\n\n    setComponentProperties(fixture, { componentProperties: changedProperties });\n\n    if (hasOnChangesHook(fixture.componentInstance)) {\n      fixture.componentInstance.ngOnChanges(changes);\n    }\n\n    fixture.componentRef.injector.get(ChangeDetectorRef).detectChanges();\n  };\n\n  let router = routes ? inject(Router) : null;\n  const zone = inject(NgZone);\n  const navigate = async (elementOrPath: Element | string, basePath = '') => {\n    if (!router) {\n      router = inject(Router);\n    }\n\n    const href = typeof elementOrPath === 'string' ? elementOrPath : elementOrPath.getAttribute('href');\n    const [path, params] = (basePath + href).split('?');\n    const queryParams = params\n      ? params.split('&').reduce((qp, q) => {\n          const [key, value] = q.split('=');\n          const currentValue = qp[key];\n          if (typeof currentValue === 'undefined') {\n            qp[key] = value;\n          } else if (Array.isArray(currentValue)) {\n            qp[key] = [...currentValue, value];\n          } else {\n            qp[key] = [currentValue, value];\n          }\n          return qp;\n        }, {})\n      : undefined;\n\n    const navigateOptions: NavigationExtras = queryParams\n      ? {\n          queryParams,\n        }\n      : undefined;\n\n    const doNavigate = () => (navigateOptions ? router.navigate([path], navigateOptions) : router.navigate([path]));\n\n    let result;\n\n    if (zone) {\n      await zone.run(() => (result = doNavigate()));\n    } else {\n      result = doNavigate();\n    }\n\n    detectChanges();\n    return result;\n  };\n\n  return {\n    fixture,\n    detectChanges: () => detectChanges(),\n    navigate,\n    rerender,\n    change,\n    debugElement: typeof sut === 'string' ? fixture.debugElement : fixture.debugElement.query(By.directive(sut)),\n    container: fixture.nativeElement,\n    debug: (element = fixture.nativeElement, maxLength, options) =>\n      Array.isArray(element)\n        ? element.forEach((e) => console.log(dtlPrettyDOM(e, maxLength, options)))\n        : console.log(dtlPrettyDOM(element, maxLength, options)),\n    ...replaceFindWithFindAndDetectChanges(dtlGetQueriesForElement(fixture.nativeElement, queries)),\n  };\n\n  async function renderFixture(properties: Partial<SutType>) {\n    if (fixture) {\n      cleanupAtFixture(fixture);\n    }\n\n    fixture = await createComponent(componentContainer);\n    setComponentProperties(fixture, { componentProperties: properties });\n\n    if (removeAngularAttributes) {\n      fixture.nativeElement.removeAttribute('ng-version');\n      const idAttribute = fixture.nativeElement.getAttribute('id');\n      if (idAttribute && idAttribute.startsWith('root')) {\n        fixture.nativeElement.removeAttribute('id');\n      }\n    }\n    mountedFixtures.add(fixture);\n\n    let isAlive = true;\n    fixture.componentRef.onDestroy(() => (isAlive = false));\n\n    if (hasOnChangesHook(fixture.componentInstance)) {\n      const changes = getChangesObj(null, componentProperties);\n      fixture.componentInstance.ngOnChanges(changes);\n    }\n\n    detectChanges = () => {\n      if (isAlive) {\n        fixture.detectChanges();\n      }\n    };\n\n    if (detectChangesOnRender) {\n      detectChanges();\n    }\n  }\n}\n\nasync function createComponent<SutType>(component: Type<SutType>): Promise<ComponentFixture<SutType>> {\n  /* Make sure angular application is initialized before creating component */\n  await inject(ApplicationInitStatus).donePromise;\n  return TestBed.createComponent(component);\n}\n\nfunction createComponentFixture<SutType>(\n  sut: Type<SutType> | string,\n  { wrapper }: Pick<RenderTemplateOptions<SutType>, 'wrapper'>,\n): Type<any> {\n  if (typeof sut === 'string') {\n    TestBed.overrideTemplate(wrapper, sut);\n    return wrapper;\n  }\n  return sut;\n}\n\nfunction setComponentProperties<SutType>(\n  fixture: ComponentFixture<SutType>,\n  { componentProperties = {} }: Pick<RenderTemplateOptions<SutType, any>, 'componentProperties'>,\n) {\n  for (const key of Object.keys(componentProperties)) {\n    const descriptor: PropertyDescriptor = Object.getOwnPropertyDescriptor(\n      fixture.componentInstance.constructor.prototype,\n      key,\n    );\n    let _value = componentProperties[key];\n    const defaultGetter = () => _value;\n    const extendedSetter = (value) => {\n      _value = value;\n      descriptor?.set?.call(fixture.componentInstance, _value);\n      fixture.detectChanges();\n    };\n\n    Object.defineProperty(fixture.componentInstance, key, {\n      get: descriptor?.get || defaultGetter,\n      set: extendedSetter,\n      // Allow the property to be defined again later.\n      // This happens when the component properties are updated after initial render.\n      // For Jest this is `true` by default, for Karma and a real browser the default is `false`\n      configurable: true,\n    });\n\n    descriptor?.set?.call(fixture.componentInstance, _value);\n  }\n  return fixture;\n}\n\nfunction hasOnChangesHook<SutType>(componentInstance: SutType): componentInstance is SutType & OnChanges {\n  return (\n    'ngOnChanges' in componentInstance && typeof (componentInstance as SutType & OnChanges).ngOnChanges === 'function'\n  );\n}\n\nfunction getChangesObj<SutType>(oldProps: Partial<SutType> | null, newProps: Partial<SutType>) {\n  const isFirstChange = oldProps === null;\n  return Object.keys(newProps).reduce<SimpleChanges>(\n    (changes, key) => ({\n      ...changes,\n      [key]: new SimpleChange(isFirstChange ? null : oldProps[key], newProps[key], isFirstChange),\n    }),\n    {},\n  );\n}\n\nfunction addAutoDeclarations<SutType>(\n  sut: Type<SutType> | string,\n  {\n    declarations,\n    excludeComponentDeclaration,\n    wrapper,\n  }: Pick<RenderTemplateOptions<any>, 'declarations' | 'excludeComponentDeclaration' | 'wrapper'>,\n) {\n  if (typeof sut === 'string') {\n    return [...declarations, wrapper];\n  }\n\n  const components = () => (excludeComponentDeclaration ? [] : [sut]);\n  return [...declarations, ...components()];\n}\n\nfunction addAutoImports({ imports, routes }: Pick<RenderComponentOptions<any>, 'imports' | 'routes'>) {\n  const animations = () => {\n    const animationIsDefined =\n      imports.indexOf(NoopAnimationsModule) > -1 || imports.indexOf(BrowserAnimationsModule) > -1;\n    return animationIsDefined ? [] : [NoopAnimationsModule];\n  };\n\n  const routing = () => (routes ? [RouterTestingModule.withRoutes(routes)] : []);\n\n  return [...imports, ...animations(), ...routing()];\n}\n\n/**\n * Wrap waitFor to invoke the Angular change detection cycle before invoking the callback\n */\nasync function waitForWrapper<T>(\n  detectChanges: () => void,\n  callback: () => T extends Promise<any> ? never : T,\n  options?: dtlWaitForOptions,\n): Promise<T> {\n  let inFakeAsync = true;\n  try {\n    tick(0);\n  } catch (err) {\n    inFakeAsync = false;\n  }\n\n  detectChanges();\n\n  return await dtlWaitFor(() => {\n    setTimeout(() => detectChanges(), 0);\n    if (inFakeAsync) {\n      tick(0);\n    }\n    return callback();\n  }, options);\n}\n\n/**\n * Wrap waitForElementToBeRemovedWrapper to poke the Angular change detection cycle before invoking the callback\n */\nasync function waitForElementToBeRemovedWrapper<T>(\n  detectChanges: () => void,\n  callback: (() => T) | T,\n  options?: dtlWaitForOptions,\n): Promise<void> {\n  let cb;\n  if (typeof callback !== 'function') {\n    const elements = (Array.isArray(callback) ? callback : [callback]) as Element[];\n    const getRemainingElements = elements.map((element) => {\n      let parent = element.parentElement;\n      while (parent.parentElement) {\n        parent = parent.parentElement;\n      }\n      return () => (parent.contains(element) ? element : null);\n    });\n    cb = () => getRemainingElements.map((c) => c()).filter(Boolean);\n  } else {\n    cb = callback;\n  }\n\n  return await dtlWaitForElementToBeRemoved(() => {\n    const result = cb();\n    detectChanges();\n    return result;\n  }, options);\n}\n\nfunction cleanup() {\n  mountedFixtures.forEach(cleanupAtFixture);\n}\n\nfunction cleanupAtFixture(fixture) {\n  fixture.destroy();\n\n  if (!fixture.nativeElement.getAttribute('ng-version') && fixture.nativeElement.parentNode === document.body) {\n    document.body.removeChild(fixture.nativeElement);\n  }\n  mountedFixtures.delete(fixture);\n}\n\n// if we're running in a test runner that supports afterEach\n// then we'll automatically run cleanup afterEach test\n// this ensures that tests run in isolation from each other\n// if you don't like this, set the ATL_SKIP_AUTO_CLEANUP env variable to 'true'\nif (typeof process === 'undefined' || !process.env?.ATL_SKIP_AUTO_CLEANUP) {\n  if (typeof afterEach === 'function') {\n    afterEach(() => {\n      cleanup();\n    });\n  }\n}\n\n@Component({ selector: 'atl-wrapper-component', template: '' })\nclass WrapperComponent {}\n\n/**\n * Wrap findBy queries to poke the Angular change detection cycle\n */\nfunction replaceFindWithFindAndDetectChanges<T>(originalQueriesForContainer: T): T {\n  return Object.keys(originalQueriesForContainer).reduce((newQueries, key) => {\n    const getByQuery = originalQueriesForContainer[key.replace('find', 'get')];\n    if (key.startsWith('find') && getByQuery) {\n      newQueries[key] = async (text, options, waitOptions) => {\n        // original implementation at https://github.com/testing-library/dom-testing-library/blob/main/src/query-helpers.js\n        const result = await waitForWrapper(\n          detectChangesForMountedFixtures,\n          () => getByQuery(text, options),\n          waitOptions,\n        );\n        return result;\n      };\n    } else {\n      newQueries[key] = originalQueriesForContainer[key];\n    }\n\n    return newQueries;\n  }, {} as T);\n}\n\n/**\n * Call detectChanges for all fixtures\n */\nfunction detectChangesForMountedFixtures() {\n  mountedFixtures.forEach((fixture) => {\n    try {\n      fixture.detectChanges();\n    } catch (err) {\n      if (!err.message.startsWith('ViewDestroyedError')) {\n        throw err;\n      }\n    }\n  });\n}\n\n/**\n * Re-export screen with patched queries\n */\nconst screen = replaceFindWithFindAndDetectChanges(dtlScreen);\n\n/**\n * Re-export within with patched queries\n */\n\nconst within: typeof getQueriesForElement = <T extends Queries = typeof dtlQueries>(\n  element: HTMLElement,\n  queriesToBind?: T,\n) => {\n  const container = dtlWithin(element, queriesToBind);\n  return replaceFindWithFindAndDetectChanges(container);\n};\n\n/**\n * Re-export waitFor with patched waitFor\n */\nasync function waitFor<T>(callback: () => T extends Promise<any> ? never : T, options?: dtlWaitForOptions): Promise<T> {\n  return waitForWrapper(detectChangesForMountedFixtures, callback, options);\n}\n\n/**\n * Re-export waitForElementToBeRemoved with patched waitForElementToBeRemoved\n */\nasync function waitForElementToBeRemoved<T>(callback: (() => T) | T, options?: dtlWaitForOptions): Promise<void> {\n  return waitForElementToBeRemovedWrapper(detectChangesForMountedFixtures, callback, options);\n}\n\n/**\n * Manually export otherwise we get the following error while running Jest tests\n * TypeError: Cannot set property fireEvent of [object Object] which has only a getter\n * exports.fireEvent = fireEvent\n */\nexport {\n  fireEvent,\n  buildQueries,\n  getByLabelText,\n  getAllByLabelText,\n  queryByLabelText,\n  queryAllByLabelText,\n  findByLabelText,\n  findAllByLabelText,\n  getByPlaceholderText,\n  getAllByPlaceholderText,\n  queryByPlaceholderText,\n  queryAllByPlaceholderText,\n  findByPlaceholderText,\n  findAllByPlaceholderText,\n  getByText,\n  getAllByText,\n  queryByText,\n  queryAllByText,\n  findByText,\n  findAllByText,\n  getByAltText,\n  getAllByAltText,\n  queryByAltText,\n  queryAllByAltText,\n  findByAltText,\n  findAllByAltText,\n  getByTitle,\n  getAllByTitle,\n  queryByTitle,\n  queryAllByTitle,\n  findByTitle,\n  findAllByTitle,\n  getByDisplayValue,\n  getAllByDisplayValue,\n  queryByDisplayValue,\n  queryAllByDisplayValue,\n  findByDisplayValue,\n  findAllByDisplayValue,\n  getByRole,\n  getAllByRole,\n  queryByRole,\n  queryAllByRole,\n  findByRole,\n  findAllByRole,\n  getByTestId,\n  getAllByTestId,\n  queryByTestId,\n  queryAllByTestId,\n  findByTestId,\n  findAllByTestId,\n  createEvent,\n  getDefaultNormalizer,\n  getElementError,\n  getNodeText,\n  getQueriesForElement,\n  getRoles,\n  isInaccessible,\n  logDOM,\n  logRoles,\n  prettyDOM,\n  queries,\n  queryAllByAttribute,\n  queryByAttribute,\n  queryHelpers,\n} from '@testing-library/dom';\n\n// export patched dtl\nexport { screen, waitFor, waitForElementToBeRemoved, within };\n","/*\n * Public API Surface of testing-library\n */\n\nexport * from './lib/models';\nexport * from './lib/config';\nexport * from './lib/testing-library';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["dtlConfigure","dtlPrettyDOM","dtlGetQueriesForElement","dtlWaitFor","dtlWaitForElementToBeRemoved","dtlScreen","dtlWithin"],"mappings":"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"}